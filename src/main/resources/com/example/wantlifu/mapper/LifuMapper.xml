<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wantlifu.dao.LifuMapper">
  <resultMap id="BaseResultMap" type="com.example.wantlifu.entity.Lifu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="buy_count" jdbcType="INTEGER" property="buyCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="love_count" jdbcType="INTEGER" property="loveCount" />
    <result column="is_hot" jdbcType="INTEGER" property="isHot" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="warning_count" jdbcType="INTEGER" property="warningCount" />
    <result column="is_new" jdbcType="INTEGER" property="isNew" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="trademark_id" jdbcType="INTEGER" property="trademarkId" />
    <result column="true_price" jdbcType="REAL" property="truePrice" />
    <result column="origin_price" jdbcType="REAL" property="originPrice" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="can_zu_pin" jdbcType="INTEGER" property="canZuPin" />
    <result column="show_in_index" jdbcType="INTEGER" property="showInIndex" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.wantlifu.entity.Lifu">
    <result column="detal" jdbcType="LONGVARCHAR" property="detal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, pic, buy_count, comment_count, love_count, is_hot, discount, warning_count, 
    is_new, create_time, trademark_id, true_price, origin_price, count, remark, remark1, 
    status, type_id, can_zu_pin, show_in_index
  </sql>
  <sql id="Blob_Column_List">
    detal
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.wantlifu.entity.LifuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lifu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.wantlifu.entity.LifuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lifu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from lifu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lifu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wantlifu.entity.LifuExample">
    delete from lifu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wantlifu.entity.Lifu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifu (name, pic, buy_count, 
      comment_count, love_count, is_hot, 
      discount, warning_count, is_new, 
      create_time, trademark_id, true_price, 
      origin_price, count, remark, 
      remark1, status, type_id, 
      can_zu_pin, show_in_index, detal
      )
    values (#{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{buyCount,jdbcType=INTEGER}, 
      #{commentCount,jdbcType=INTEGER}, #{loveCount,jdbcType=INTEGER}, #{isHot,jdbcType=INTEGER}, 
      #{discount,jdbcType=INTEGER}, #{warningCount,jdbcType=INTEGER}, #{isNew,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{trademarkId,jdbcType=INTEGER}, #{truePrice,jdbcType=REAL}, 
      #{originPrice,jdbcType=REAL}, #{count,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{remark1,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{canZuPin,jdbcType=INTEGER}, #{showInIndex,jdbcType=INTEGER}, #{detal,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.wantlifu.entity.Lifu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into lifu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="buyCount != null">
        buy_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="loveCount != null">
        love_count,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="warningCount != null">
        warning_count,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="trademarkId != null">
        trademark_id,
      </if>
      <if test="truePrice != null">
        true_price,
      </if>
      <if test="originPrice != null">
        origin_price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="canZuPin != null">
        can_zu_pin,
      </if>
      <if test="showInIndex != null">
        show_in_index,
      </if>
      <if test="detal != null">
        detal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="buyCount != null">
        #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="loveCount != null">
        #{loveCount,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="warningCount != null">
        #{warningCount,jdbcType=INTEGER},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trademarkId != null">
        #{trademarkId,jdbcType=INTEGER},
      </if>
      <if test="truePrice != null">
        #{truePrice,jdbcType=REAL},
      </if>
      <if test="originPrice != null">
        #{originPrice,jdbcType=REAL},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="canZuPin != null">
        #{canZuPin,jdbcType=INTEGER},
      </if>
      <if test="showInIndex != null">
        #{showInIndex,jdbcType=INTEGER},
      </if>
      <if test="detal != null">
        #{detal,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wantlifu.entity.LifuExample" resultType="java.lang.Long">
    select count(*) from lifu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lifu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.buyCount != null">
        buy_count = #{record.buyCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.loveCount != null">
        love_count = #{record.loveCount,jdbcType=INTEGER},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.warningCount != null">
        warning_count = #{record.warningCount,jdbcType=INTEGER},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.trademarkId != null">
        trademark_id = #{record.trademarkId,jdbcType=INTEGER},
      </if>
      <if test="record.truePrice != null">
        true_price = #{record.truePrice,jdbcType=REAL},
      </if>
      <if test="record.originPrice != null">
        origin_price = #{record.originPrice,jdbcType=REAL},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.canZuPin != null">
        can_zu_pin = #{record.canZuPin,jdbcType=INTEGER},
      </if>
      <if test="record.showInIndex != null">
        show_in_index = #{record.showInIndex,jdbcType=INTEGER},
      </if>
      <if test="record.detal != null">
        detal = #{record.detal,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update lifu
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      buy_count = #{record.buyCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      love_count = #{record.loveCount,jdbcType=INTEGER},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      warning_count = #{record.warningCount,jdbcType=INTEGER},
      is_new = #{record.isNew,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      trademark_id = #{record.trademarkId,jdbcType=INTEGER},
      true_price = #{record.truePrice,jdbcType=REAL},
      origin_price = #{record.originPrice,jdbcType=REAL},
      count = #{record.count,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      can_zu_pin = #{record.canZuPin,jdbcType=INTEGER},
      show_in_index = #{record.showInIndex,jdbcType=INTEGER},
      detal = #{record.detal,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lifu
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      buy_count = #{record.buyCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      love_count = #{record.loveCount,jdbcType=INTEGER},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      warning_count = #{record.warningCount,jdbcType=INTEGER},
      is_new = #{record.isNew,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      trademark_id = #{record.trademarkId,jdbcType=INTEGER},
      true_price = #{record.truePrice,jdbcType=REAL},
      origin_price = #{record.originPrice,jdbcType=REAL},
      count = #{record.count,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      can_zu_pin = #{record.canZuPin,jdbcType=INTEGER},
      show_in_index = #{record.showInIndex,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wantlifu.entity.Lifu">
    update lifu
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="buyCount != null">
        buy_count = #{buyCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="loveCount != null">
        love_count = #{loveCount,jdbcType=INTEGER},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="warningCount != null">
        warning_count = #{warningCount,jdbcType=INTEGER},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="trademarkId != null">
        trademark_id = #{trademarkId,jdbcType=INTEGER},
      </if>
      <if test="truePrice != null">
        true_price = #{truePrice,jdbcType=REAL},
      </if>
      <if test="originPrice != null">
        origin_price = #{originPrice,jdbcType=REAL},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="canZuPin != null">
        can_zu_pin = #{canZuPin,jdbcType=INTEGER},
      </if>
      <if test="showInIndex != null">
        show_in_index = #{showInIndex,jdbcType=INTEGER},
      </if>
      <if test="detal != null">
        detal = #{detal,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.wantlifu.entity.Lifu">
    update lifu
    set name = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      buy_count = #{buyCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      love_count = #{loveCount,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      warning_count = #{warningCount,jdbcType=INTEGER},
      is_new = #{isNew,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      trademark_id = #{trademarkId,jdbcType=INTEGER},
      true_price = #{truePrice,jdbcType=REAL},
      origin_price = #{originPrice,jdbcType=REAL},
      count = #{count,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      can_zu_pin = #{canZuPin,jdbcType=INTEGER},
      show_in_index = #{showInIndex,jdbcType=INTEGER},
      detal = #{detal,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wantlifu.entity.Lifu">
    update lifu
    set name = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      buy_count = #{buyCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      love_count = #{loveCount,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      warning_count = #{warningCount,jdbcType=INTEGER},
      is_new = #{isNew,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      trademark_id = #{trademarkId,jdbcType=INTEGER},
      true_price = #{truePrice,jdbcType=REAL},
      origin_price = #{originPrice,jdbcType=REAL},
      count = #{count,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      can_zu_pin = #{canZuPin,jdbcType=INTEGER},
      show_in_index = #{showInIndex,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>