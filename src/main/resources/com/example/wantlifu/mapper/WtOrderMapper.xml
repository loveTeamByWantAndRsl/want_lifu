<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wantlifu.dao.WtOrderMapper">
  <resultMap id="BaseResultMap" type="com.example.wantlifu.entity.WtOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="ispay" jdbcType="INTEGER" property="ispay" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="deliver_type" jdbcType="INTEGER" property="deliverType" />
    <result column="is_refund" jdbcType="INTEGER" property="isRefund" />
    <result column="deliver_money" jdbcType="DECIMAL" property="deliverMoney" />
    <result column="is_appraise" jdbcType="INTEGER" property="isAppraise" />
    <result column="reject_other_reason" jdbcType="VARCHAR" property="rejectOtherReason" />
    <result column="express_id" jdbcType="INTEGER" property="expressId" />
    <result column="express_no" jdbcType="VARCHAR" property="expressNo" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="show_in_user" jdbcType="INTEGER" property="showInUser" />
    <result column="lifu_total_price" jdbcType="DECIMAL" property="lifuTotalPrice" />
    <result column="real_total_money" jdbcType="DECIMAL" property="realTotalMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, user_name, address, order_no, ispay, pay_time, created_time, status, 
    deliver_type, is_refund, deliver_money, is_appraise, reject_other_reason, express_id, 
    express_no, trade_no, show_in_user, lifu_total_price, real_total_money
  </sql>
  <select id="selectByExample" parameterType="com.example.wantlifu.entity.WtOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wt_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wt_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wt_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wantlifu.entity.WtOrderExample">
    delete from wt_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wantlifu.entity.WtOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wt_order (userid, user_name, address, 
      order_no, ispay, pay_time, 
      created_time, status, deliver_type, 
      is_refund, deliver_money, is_appraise, 
      reject_other_reason, express_id, express_no, 
      trade_no, show_in_user, lifu_total_price, 
      real_total_money)
    values (#{userid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{ispay,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{deliverType,jdbcType=INTEGER}, 
      #{isRefund,jdbcType=INTEGER}, #{deliverMoney,jdbcType=DECIMAL}, #{isAppraise,jdbcType=INTEGER}, 
      #{rejectOtherReason,jdbcType=VARCHAR}, #{expressId,jdbcType=INTEGER}, #{expressNo,jdbcType=VARCHAR}, 
      #{tradeNo,jdbcType=VARCHAR}, #{showInUser,jdbcType=INTEGER}, #{lifuTotalPrice,jdbcType=DECIMAL}, 
      #{realTotalMoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.wantlifu.entity.WtOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wt_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="ispay != null">
        ispay,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deliverType != null">
        deliver_type,
      </if>
      <if test="isRefund != null">
        is_refund,
      </if>
      <if test="deliverMoney != null">
        deliver_money,
      </if>
      <if test="isAppraise != null">
        is_appraise,
      </if>
      <if test="rejectOtherReason != null">
        reject_other_reason,
      </if>
      <if test="expressId != null">
        express_id,
      </if>
      <if test="expressNo != null">
        express_no,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="showInUser != null">
        show_in_user,
      </if>
      <if test="lifuTotalPrice != null">
        lifu_total_price,
      </if>
      <if test="realTotalMoney != null">
        real_total_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="ispay != null">
        #{ispay,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deliverType != null">
        #{deliverType,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        #{isRefund,jdbcType=INTEGER},
      </if>
      <if test="deliverMoney != null">
        #{deliverMoney,jdbcType=DECIMAL},
      </if>
      <if test="isAppraise != null">
        #{isAppraise,jdbcType=INTEGER},
      </if>
      <if test="rejectOtherReason != null">
        #{rejectOtherReason,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null">
        #{expressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null">
        #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="showInUser != null">
        #{showInUser,jdbcType=INTEGER},
      </if>
      <if test="lifuTotalPrice != null">
        #{lifuTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="realTotalMoney != null">
        #{realTotalMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wantlifu.entity.WtOrderExample" resultType="java.lang.Long">
    select count(*) from wt_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wt_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.ispay != null">
        ispay = #{record.ispay,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.deliverType != null">
        deliver_type = #{record.deliverType,jdbcType=INTEGER},
      </if>
      <if test="record.isRefund != null">
        is_refund = #{record.isRefund,jdbcType=INTEGER},
      </if>
      <if test="record.deliverMoney != null">
        deliver_money = #{record.deliverMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.isAppraise != null">
        is_appraise = #{record.isAppraise,jdbcType=INTEGER},
      </if>
      <if test="record.rejectOtherReason != null">
        reject_other_reason = #{record.rejectOtherReason,jdbcType=VARCHAR},
      </if>
      <if test="record.expressId != null">
        express_id = #{record.expressId,jdbcType=INTEGER},
      </if>
      <if test="record.expressNo != null">
        express_no = #{record.expressNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.showInUser != null">
        show_in_user = #{record.showInUser,jdbcType=INTEGER},
      </if>
      <if test="record.lifuTotalPrice != null">
        lifu_total_price = #{record.lifuTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.realTotalMoney != null">
        real_total_money = #{record.realTotalMoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wt_order
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      ispay = #{record.ispay,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      deliver_type = #{record.deliverType,jdbcType=INTEGER},
      is_refund = #{record.isRefund,jdbcType=INTEGER},
      deliver_money = #{record.deliverMoney,jdbcType=DECIMAL},
      is_appraise = #{record.isAppraise,jdbcType=INTEGER},
      reject_other_reason = #{record.rejectOtherReason,jdbcType=VARCHAR},
      express_id = #{record.expressId,jdbcType=INTEGER},
      express_no = #{record.expressNo,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      show_in_user = #{record.showInUser,jdbcType=INTEGER},
      lifu_total_price = #{record.lifuTotalPrice,jdbcType=DECIMAL},
      real_total_money = #{record.realTotalMoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wantlifu.entity.WtOrder">
    update wt_order
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="ispay != null">
        ispay = #{ispay,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deliverType != null">
        deliver_type = #{deliverType,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        is_refund = #{isRefund,jdbcType=INTEGER},
      </if>
      <if test="deliverMoney != null">
        deliver_money = #{deliverMoney,jdbcType=DECIMAL},
      </if>
      <if test="isAppraise != null">
        is_appraise = #{isAppraise,jdbcType=INTEGER},
      </if>
      <if test="rejectOtherReason != null">
        reject_other_reason = #{rejectOtherReason,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null">
        express_id = #{expressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null">
        express_no = #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="showInUser != null">
        show_in_user = #{showInUser,jdbcType=INTEGER},
      </if>
      <if test="lifuTotalPrice != null">
        lifu_total_price = #{lifuTotalPrice,jdbcType=DECIMAL},
      </if>
      <if test="realTotalMoney != null">
        real_total_money = #{realTotalMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wantlifu.entity.WtOrder">
    update wt_order
    set userid = #{userid,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      ispay = #{ispay,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      deliver_type = #{deliverType,jdbcType=INTEGER},
      is_refund = #{isRefund,jdbcType=INTEGER},
      deliver_money = #{deliverMoney,jdbcType=DECIMAL},
      is_appraise = #{isAppraise,jdbcType=INTEGER},
      reject_other_reason = #{rejectOtherReason,jdbcType=VARCHAR},
      express_id = #{expressId,jdbcType=INTEGER},
      express_no = #{expressNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      show_in_user = #{showInUser,jdbcType=INTEGER},
      lifu_total_price = #{lifuTotalPrice,jdbcType=DECIMAL},
      real_total_money = #{realTotalMoney,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>